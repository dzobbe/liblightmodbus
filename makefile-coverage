CC = gcc
CFLAGS = -Wall -g

LD = ld
LDFLAGS =

MASTERFLAGS = -DLIGHTMODBUS_MASTER_F01=0 -DLIGHTMODBUS_MASTER_F02=0 -DLIGHTMODBUS_MASTER_F03=1 -DLIGHTMODBUS_MASTER_F04=1 \
	-DLIGHTMODBUS_MASTER_F05=1 -DLIGHTMODBUS_MASTER_F06=1 -DLIGHTMODBUS_MASTER_F15=1 -DLIGHTMODBUS_MASTER_F16=1 -DLIGHTMODBUS_MASTER_F22=1
SLAVEFLAGS = -DLIGHTMODBUS_SLAVE_F01=1 -DLIGHTMODBUS_SLAVE_F02=1 -DLIGHTMODBUS_SLAVE_F03=1 -DLIGHTMODBUS_SLAVE_F04=1 \
	-DLIGHTMODBUS_SLAVE_F05=1 -DLIGHTMODBUS_SLAVE_F06=1 -DLIGHTMODBUS_SLAVE_F15=1 -DLIGHTMODBUS_SLAVE_F16=1 -DLIGHTMODBUS_SLAVE_F22=1
all: CFLAGS += --coverage -Iinclude
all: coverage-test valgrind-test massif-test

compile: clean
	$(CC) $(CFLAGS) $(MASTERFLAGS) -c src/master.c
	$(CC) $(CFLAGS) $(SLAVEFLAGS) -c src/slave.c
	$(CC) $(CFLAGS) -c src/core.c
	$(CC) $(CFLAGS) -c test/test.c
	$(CC) $(CFLAGS) test.o core.o master.o slave.o -o coverage-test

coverage-test: compile
	./coverage-test | tee coverage-test.log

valgrind-test: compile
	valgrind --leak-check=full --track-origins=yes --xml=yes --xml-file=valgrind.xml "./coverage-test"

massif-test: compile
	valgrind --tool=massif --massif-out-file=massif.out --stacks=yes "./coverage-test"
	ms_print massif.out

clean:
	-find . -name "*.gch" -type f -delete
	-rm -rf obj
	-rm -rf lib
	-rm -f *.gcno
	-rm -f *.gcda
	-rm -f *.o
	-rm -f coverage-test
	-rm -f coverage-test.log
	-rm -f valgrind.xml
	-rm -f massif.out
